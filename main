package main

import (
	"bufio"
	"fmt"
	"os"
	"strconv"
)

func main() {

	index := 0
	sc := bufio.NewScanner(os.Stdin)
	var lenLine int
	for sc.Scan() {
		lenLine, _ = strconv.Atoi(sc.Text())
		break
	}

	array := make([]int, 1)
	for sc.Scan() {
		txt := sc.Text()
		txtInt, _ := strconv.Atoi(txt)

		array[index] = txtInt
		fmt.Println(strconv.Itoa(findMaximumXOR(array)))
		index++
		if index == lenLine {
			break
		}
		array = newArray(array)
	}

}

func newArray(oldArr []int) []int {
	newArr := make([]int, len(oldArr)+1)
	copy(newArr, oldArr)

	return newArr

}

func findMaximumXOR(nums []int) int {
	res := 0
	mask := 0
	for i := 31; i >= 0; i-- {
		mask = mask | (1 << uint(i))
		prefixes := make(map[int]int)
		for _, num := range nums {
			prefixes[num&mask]++
		}

		temp := (res | (1 << uint(i)))
		for k := range prefixes {
			t := temp ^ k
			if (t == k && prefixes[t] > 1) || (t != k && prefixes[t] > 0) {
				res = temp
				break
			}
		}
	}

	return res
}
